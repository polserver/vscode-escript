{
	"name": "escript-lsp",
	"version": "0.14.1",
	"description": "EScript for Visual Studio Code. Provides code completion, navigation, and more.",
	"contributors": [
		{
			"name": "POL Core Team",
			"url": "https://github.com/polserver"
		}
	],
	"license": "Apache-2.0",
	"publisher": "polserver",
	"icon": "icon.png",
	"categories": [
		"Programming Languages"
	],
	"keywords": [
		"POL",
		"polserver",
		"Escript"
	],
	"engines": {
		"vscode": "^1.78.0"
	},
	"activationEvents": [
		"onDebug"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/polserver/vscode-escript"
	},
	"main": "./client/out/extension.js",
	"contributes": {
		"languages": [
			{
				"id": "escript",
				"aliases": [
					"EScript",
					"escript"
				],
				"extensions": [
					".src",
					".inc",
					".em"
				],
				"configuration": "./language-configurations/escript.json"
			},
			{
				"id": "escriptcfg",
				"aliases": [
					"escriptcfg"
				],
				"extensions": [
					".cfg"
				],
				"configuration": "./language-configurations/cfg.json"
			},
			{
				"id": "escript-injection"
			},
			{
				"id": "escriptdoc"
			}
		],
		"configuration": {
			"type": "object",
			"title": "EScript",
			"properties": {
				"escript.showModuleFunctionComments": {
					"type": "boolean",
					"default": false,
					"description": "Show module function comments in documentation (hover, signature help)."
				},
				"escript.continueAnalysisOnError": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Continue analysis even on parser errors. This allows symbols (variables, functions, function parameters, ...) to be available for extension features (hover, signature help, ...).\n\n**CAUTION**: This feature is still under experimentation and may cause unexpected crashes. If extension fails, please report an issue and disable this feature."
				},
				"escript.polCommitId": {
					"type": "string",
					"default": "",
					"description": "If set, use this specific POL commit (or tag) for documentation."
				},
				"escript.disableWorkspaceReferences": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Disable support for finding references across the whole workspace. If `true`, loading of the workspace cache is skipped, and finding references will only work across open files in the editor and their dependents.\n\nChanging this option does nothing if the workspace cache has already been loaded."
				},
				"escript.referenceAllFunctions": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "By default, the compiler will only include functions that have been called when analyzing sources. If `true`, all functions will be analyzed, regardless if they are used."
				}
			}
		},
		"grammars": [
			{
				"language": "escript",
				"scopeName": "source.escript",
				"path": "./grammars/escript.json"
			},
			{
				"language": "escriptcfg",
				"scopeName": "source.escriptcfg",
				"path": "./grammars/cfg.json"
			},
			{
				"language": "escriptdoc",
				"scopeName": "source.escriptdoc",
				"path": "./grammars/doc.json"
			},
			{
				"language": "escript-injection",
				"scopeName": "markdown.escriptdoc.codeblock",
				"path": "./grammars/codeblock.json",
				"injectTo": [
					"text.html.markdown"
				],
				"embeddedLanguages": {
					"meta.embedded.block.escriptdoc": "escriptdoc"
				}
			}
		],
		"breakpoints": [
			{
				"language": "escript"
			}
		],
		"debuggers": [
			{
				"type": "pol",
				"languages": [
					"escript"
				],
				"label": "POL Debug",
				"configurationAttributes": {
					"launch": {
						"required": [
							"port",
							"script"
						],
						"properties": {
							"host": {
								"type": "string",
								"description": "Debug server host",
								"default": "127.0.0.1"
							},
							"port": {
								"type": "number",
								"description": "Debug server port",
								"default": 5002
							},
							"password": {
								"type": "string",
								"description": "Debug server password"
							},
							"script": {
								"type": "string",
								"description": "Script to launch"
							},
							"arg": {
								"type": "string",
								"description": "Packed argument to send to program"
							},
							"stopAtEntry": {
								"type": "boolean",
								"description": "If true, the debugger should stop at the entrypoint of the target. Defaults to false.",
								"default": false
							}
						}
					},
					"attach": {
						"required": [
							"port"
						],
						"properties": {
							"host": {
								"type": "string",
								"description": "Debug server host",
								"default": "127.0.0.1"
							},
							"port": {
								"type": "number",
								"description": "Debug server port",
								"default": 5002
							},
							"password": {
								"type": "string",
								"description": "Debug server password"
							},
							"pid": {
								"type": "number",
								"description": "Process id. If none provided, a list of processes matching property `script` will be displayed to choose from.",
								"default": 0
							},
							"script": {
								"type": "string",
								"description": "If no process id provided, attach to process running this script."
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "POL Debug: Attach",
						"description": "A new configuration for attaching to a script",
						"body": {
							"type": "pol",
							"name": "Attach to script",
							"request": "attach",
							"host": "127.0.0.1",
							"port": 5002,
							"password": "",
							"pid": 0,
							"script": "^\"\\${relativeFile}\""
						}
					},
					{
						"label": "POL Debug: Launch",
						"description": "A new configuration for launching a script",
						"body": {
							"type": "pol",
							"name": "Launch script",
							"request": "launch",
							"host": "127.0.0.1",
							"port": 5002,
							"password": "",
							"script": "^\"\\${relativeFile}\"",
							"stopAtEntry": false
						}
					}
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run clean && npm run build",
		"postinstall": "cd client && npm install && cd ../native && npm install && cd ../server && npm install",
		"watch": "npm run grammar && tsc -b -w",
		"build": "npm run grammar && tsc -b && cd native && npm run build",
		"clean": "rimraf client/out server/out grammars/escript.json",
		"e2e": "cd client && npm test",
		"test": "jest --coverage --detectOpenHandles --runInBand",
		"test-all": "cross-env JEST_RUN_LONG_TESTS=1 jest --coverage --detectOpenHandles --runInBand",
		"grammar": "js-yaml grammars/escript.yml > grammars/escript.json && js-yaml grammars/cfg.yml > grammars/cfg.json && js-yaml grammars/codeblock.yml > grammars/codeblock.json && js-yaml grammars/doc.yml > grammars/doc.json",
		"eslint": "eslint"
	},
	"dependencies": {
		"vscode-languageclient": "^9.0.1"
	},
	"devDependencies": {
		"@types/jest": "^29.5.14",
		"@types/mock-fs": "^4.13.4",
		"@types/node": "^22.9.0",
		"@typescript-eslint/parser": "^8.13.0",
		"cross-env": "^7.0.3",
		"eslint": "^9.14.0",
		"jest": "^29.7.0",
		"js-yaml": "^4.1.0",
		"mock-fs": "^5.4.1",
		"rimraf": "^6.0.1",
		"ts-jest": "^29.2.5",
		"ts-loader": "^9.5.1",
		"typescript": "^5.6.3"
	}
}
